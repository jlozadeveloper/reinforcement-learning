# Configuraci√≥n de DQN
# input_shape: (4,)
# num_actions: 2
environment:
  id: "CartPole-v1"
  max_episode_steps: 4000
  render_mode: 'rgb_array'
  # reward_threshold: 995
model:
  classname: "mpl"
  dense_layers: 
    - units: 256
      activation: "relu"
      kernel_initializer: "he_uniform"
    - units: 128
      activation: "relu"
      kernel_initializer: "he_uniform"
    - units: 64
      activation: "relu"
      kernel_initializer: "he_uniform"
compile:
  loss:
    function: "MeanSquaredError"
  optimizer:
    classname: "Adam"
    learning_rate: 0.001
  metrics:
    - classname: "MeanAbsoluteError"
      name: "mae"
    - classname: "TestMetric"
      name: "Test_Metric"
    - classname: "MeanQValues"
      name: "MeanQValues"
      predicted: True
    # - classname: "RootMeanSquaredError"
    #   params:
    #     name: "root_mse"
    # - classname: "MeanAbsolutePercentageError"
    #   params:
    #     name: "mape"
    # - classname: "R2Score"
    #   params:
    #     name: "r2_score"
policy:
  classname: "epsilon"
  epsilon: 1.0
  epsilon-min: 0.001
  epsilon-decay: 0.999
replay-buffer:
  classname: "standard"
  capacity: 2000
agent:
  classname: 'DQNAgent'
  gamma: 0.95
  batch-size: 64
  train-start: 1000
callbacks:
  - classname: 'GenericMetrics'
    args:
      - ['epsilon', 'epsilon', min]
      - ['rwrd', 'reward', sum]
  - classname: 'NEpisodesReward'
    name: '50_ep_rwrd'
    n_episodes: 50
    n_ep_fn_name: 'mean'
    batches_fn_name: 'sum'
  - classname: 'MetricsUpdater'
  - classname: 'MetricsPrinter'
    args:
      - ['Ep', 'episode']
      - ['Epsilon', 'epsilon']
      - ['Rwrd', 'rwrd']
      - ['50_Ep_Rwrd', '50_ep_rwrd']
  - classname: 'ModelCheckpoint'
    # filepath: (self.logs_folder / 'checkpoints/checkpoint_{epoch}.keras').as_posix()
    filepath: '{logs_folder}/checkpoints/checkpoint_{{epoch}}.keras'
    monitor: 'rwrd'
    verbose: 0
    save_best_only: True
    mode: 'max'
    save_freq: 'epoch'
  - classname: 'TensorBoard'
    log_dir: 'self.logs_folder.as_posix()'
    histogram_freq: 5
    write_graph: True
    write_images: True
    write_steps_per_second: True
    update_freq: 'epoch'
    profile_batch: 0
    embeddings_freq: 0
    embeddings_metadata: None
train:
  classname: 'DQNTrainer'
  num-episodes: 150